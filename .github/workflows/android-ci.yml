name: Android CI

on:
  pull_request:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # 2) JDK 17 (AGP 8+ вимагає Java 17)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      # 3) Кеш Gradle (додатково до setup-java cache:gradle)
      - name: Gradle cache
        uses: gradle/gradle-build-action@v3

      # 4) (Опційно) Розпакувати keystore із секрету і задати змінні оточення
      #    ЦЕ ПОТРІБНО ЛИШЕ ДЛЯ release-підпису .aab
      - name: Prepare signing (release)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > keystore.jks
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      # 5) Дозволити виконання gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 6) Перевірки
      - name: Android Lint
        run: ./gradlew lintDebug

      - name: Unit tests
        run: ./gradlew testDebugUnitTest

      # 7) Збірка APK (debug) — для швидкого тесту
      - name: Assemble debug APK
        run: ./gradlew assembleDebug

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/*.apk

      # 8) Збірка AAB (release) — тільки на main
      - name: Bundle release AAB
        if: github.ref == 'refs/heads/main'
        env:
          ANDROID_KEYSTORE: ${{ github.workspace }}/keystore.jks
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: ./gradlew bundleRelease

      - name: Upload release AAB
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: app/build/outputs/bundle/release/*.aab

      # 9) (Опційно) Upload mapping.txt для Crashlytics (як артефакт)
      - name: Upload mapping.txt
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: mapping-release
          path: app/build/outputs/mapping/release/mapping.txt
